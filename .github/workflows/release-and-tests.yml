name: release-and-tests
on:
  push:
    tags: ['v*']   # v2.7.0, v2.7.0-rc.1, v2.7.0-beta.2, v2.7.0-alpha.3

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.p.outputs.tag }}
      phase: ${{ steps.p.outputs.phase }}       # alpha | beta | rc | stable
      prerelease: ${{ steps.p.outputs.prerelease }}
    steps:
      - name: Parse tag
        id: p
        run: |
          TAG="${GITHUB_REF_NAME}"
          PHASE="stable"; PRE="false"
          echo "$TAG" | grep -E -- '-alpha\.[0-9]+$' >/dev/null && PHASE="alpha" && PRE="true"
          echo "$TAG" | grep -E -- '-beta\.[0-9]+$'  >/dev/null && PHASE="beta"  && PRE="true"
          echo "$TAG" | grep -E -- '-rc\.[0-9]+$'    >/dev/null && PHASE="rc"    && PRE="true"
          echo "tag=$TAG"           >> $GITHUB_OUTPUT
          echo "phase=$PHASE"       >> $GITHUB_OUTPUT
          echo "prerelease=$PRE"    >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: meta
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      # 產生 version.js + 更新 index.html / manifest.json（用 tag 當版本）
      - name: Update version info (SSOT)
        run: node scripts/update-version.mjs
        env:
          RELEASE_VERSION: ${{ needs.meta.outputs.tag }}
          BUILD_NUMBER:    ${{ github.run_number }}
          GIT_SHA:         ${{ github.sha }}

      - run: npm run build
      - run: zip -r game-dist.zip . -x ".git/*" "node_modules/*" ".github/*"
      - uses: actions/upload-artifact@v4
        with: { name: game-dist, path: game-dist.zip }

  integration:
    if: needs.meta.outputs.phase == 'alpha'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with: { name: game-dist }
      - run: echo "Run integration suite here..."

  uat:
    if: needs.meta.outputs.phase == 'beta' || needs.meta.outputs.phase == 'rc'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with: { name: game-dist }
      - run: echo "Run UAT/regression suite here..."

  gh-release:
    # 若想更乾淨可改成只在 stable 建 Release：if: needs.meta.outputs.phase == 'stable'
    if: needs.meta.outputs.phase == 'rc' || needs.meta.outputs.phase == 'stable'
    runs-on: ubuntu-latest
    needs: [meta, build]
    permissions: { contents: write }
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  ${{ needs.meta.outputs.tag }}
          prerelease: ${{ needs.meta.outputs.phase != 'stable' }}
          body: "See CHANGELOG for details."
          files: game-dist.zip
